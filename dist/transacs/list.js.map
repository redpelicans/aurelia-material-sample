{"version":3,"sources":["transacs/list.js"],"names":[],"mappings":"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","file":"transacs/list.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport _ from 'lodash';\nimport TransacService from './service';\nimport {Transac, makeNode} from './index';\n\n@inject(TransacService)\nexport class TransacList {\n  constructor(service){\n    this.transacService = service;\n    this.eventsCache = {};\n    this.transacs = [\n      //{label: 'test', server: 'rp', valueDate: new Date, createdAt: new Date(), delay:15}\n    ];\n    this.from = new Date(2014,1,1);\n    this.to = new Date();\n    this.dateMode = \"Processing Date\";\n    this.dateModes = [\"Processing Date\", \"Value Date\"];\n    this.sortColumn = 'name';\n    this.sortOrder = 'asc';\n  }\n\n  reverseSortOrder(){\n    this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n  }\n\n  sortTable(column){\n    if(this.sortColumn === column) this.reverseSortOrder();\n    this.sortColumn = column;\n    this.doSortTable();\n  }\n\n  doSortTable(){\n    this.transacs = _.sortByOrder(this.transacs, [this.sortColumn], [this.sortOrder]);\n  }\n\n  addCache(event){\n    // check existence !!!\n    let node = makeNode(event);\n    this.eventsCache[node.id] = node;\n    let parent = this.eventsCache[node.parentId];\n    if(parent) parent.addChild(node);\n    //let transac = this.eventsCache[node.transacId];\n    //console.log(transac && {label: transac.label, isRunning: transac.isRunning})\n    return node;\n  }\n\n  loadData(){\n    let params = {\n      from: moment(this.from).format('DD/MM/YYYY'),\n      to: moment(this.to).format('DD/MM/YYYY'),\n      dateMode: this.dateMode === 'Value Date' ? 'valueDate' : 'createdAt'\n    };\n\n    //console.log(params);\n    this.unsubscribeHandler = this.transacService.subscribe( event => {\n      let node = this.addCache(event);\n      if(node.isTransac()) this.transacs.push(node);\n    });\n\n    return this.transacService.load(params)\n      .then(events => {\n        if(events){ \n          for(let event of events){\n            let node = this.addCache(event);\n            if(node.isTransac()) this.transacs.push(node);\n          }\n          this.doSortTable();\n          console.log(this.transacs)\n        }\n      })\n      // TODO\n      .catch(err => console.log(err));\n  }\n\n  activate(params){\n    return this.loadData();\n  }\n\n}\n"],"sourceRoot":"/source/"}